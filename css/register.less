

body{
    margin: 0;
}
nav{
    display: grid;
    position: fixed;
    height: 10vh;
    width: 100%;
    grid-template-columns: repeat(5, 1fr);
    background-color: #92aec1;
}


.logo{
    grid-area: 1 / 1 / 1 / 2;
    height: 10VH;
    // background-color: red;
    display: flex;
    justify-content: flex-start;
}
nav div .img1{
    width: 60%;
    height: 100%;
    object-fit: cover;
}


.logOut{
    grid-area: 1 / 5 / 2 / 6;
    // background-color: black;
    display: flex;
    justify-content: center;
    align-items: center;
   .icon-logOut{
    width: 10%;
    height: 5vh;
}


}

.content{
    padding-top: 10vh;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 90vh;
    color: black;
}


.padre{
    height: 90vh;
    width: 100%;
    padding-top: 5%;
    height:80vh;
    // centrar en la horizontal
    display: flex;
    justify-content: center;
    align-items: center;
    //mover en la vertical 
    // align-items:center;
    // position:absolute;
    // top:5%;   
    svg{
        position: absolute; 
        top: 90%;
        left: 3%;
        // width: 50px;
        padding-left: 0.5%;
        padding-right: 0.5%;
        // border-color: white;
        border-radius: 9px;
        background: #ffad42;
        border: 1px solid #707070;
        color: white;
    }


    .box{
        
        width: 350px;
        height: 500px;
        border-radius: 40px;
        background: #efefef;
        border: 1px solid #707070;

        display: flex;
        justify-items: center;
        flex-wrap: wrap;
        align-content: center;
        justify-content: center;
        flex-direction: column;

        // Usamos el position relatie o absolute para indicar que será el objeto padre
        position:relative;

        .titulo_box{
            hr{
                width: 80%;   
               border-top: 1px solid;
               color: #45304e;;
            }
            p{
                font-family: Arial;
                font-size: 17px;
                color: #3f1850;
            }
            
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        #NoError{
            font-family: Arial;
            font-size: 18px;
            text-align: center;
            color: #3f1850;
            position:absolute;
            top:2%;
            border-bottom: 1px solid #3f1850 ;
            padding-bottom: 3px;
            }
         #error{
            font-family: Arial;
            font-size: 18px;
            text-align: center;
            color: rgb(217, 9, 9);
              // underline (como no puedes usar los atributos text-underline-position: under; and text-decoration-skip: ink para text-decoration underline por que no es soportado por los navegadores usamos un el border-botton:)
              border-bottom: 1px solid #3f1850 ;
              padding-bottom: 3px;
              
  
              // This works because position: absolute means something like "use top, right, bottom, left to position yourself in relation to the nearest ancestor who has position: absolute or position: relative."
              // So we make #father have position: relative, and the children have position: absolute, then use top and bottom to position the children. 
              // Si no ponemos el position relative al padre cojera como padre el body y la posicón que se establezca no sera la que buscamos
              position:absolute;
              top:2%;
            }

        h2{
            font-family: Arial;
            font-size: 18px;
            text-align: center;
            color: #3f1850;

            // underline (como no puedes usar los atributos text-underline-position: under; and text-decoration-skip: ink para text-decoration underline por que no es soportado por los navegadores usamos un el border-botton:)
            border-bottom: 1px solid #3f1850 ;
            padding-bottom: 0px;
            

            // This works because position: absolute means something like "use top, right, bottom, left to position yourself in relation to the nearest ancestor who has position: absolute or position: relative."
            // So we make #father have position: relative, and the children have position: absolute, then use top and bottom to position the children. 
            // Si no ponemos el position relative al padre cojera como padre el body y la posicón que se establezca no sera la que buscamos
            position:absolute;
            top:2%;


    
        }
        .form{
            width: 250px;
            height: 25px;
            position:relative;
            top:10%;
            // left:-1%;
            // margin-left: 10%;
            margin-top: 3%;
            margin-bottom: 3%;
            border: #3f1850;
        
        }
        #submit{
            position:relative;
            top:0%;
            left: 4%;
            margin-top: 15%;
                color:white;
                width: 250px;
                height: 40px;
                border-radius: 12px;
                background: #FE5F55;
                border: 1px solid #707070;
            
        }
        label{
            position:relative;
            top:5%;
            left:9%;
            font-size: 15px;
            color: #3f1850;
            
        }
        p{
            position:relative;
            top:0%;
            font-size: 15px;
        }
        .inputs{
            display: flex;
            flex-wrap: wrap;
            flex-direction: column;
        }
        
    }
}




.error{
    color: red;
    font-size: 13px;
  
  }


  @media (max-width:450px) {
    
.padre{
    height: 40vh;

    padding-top: 65%;
    
}

.logOut{
  
   .icon-logOut{
    width: 80px;
    padding-right: 35%;
}
  }

  nav div .img1{
    width: 130px;
  
}
}